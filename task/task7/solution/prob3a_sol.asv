% 3(a) ellipse: ax^2 + cy^2 + dx + ey + f = 0;
% or
a = 1.3;
c = 3.5;
d = 3;
e = 10;
f = 3;

%}

load prob3_ellipse

n_data = numel(x);
n_iter = 1000;
dist_thr = 2;

best_param = [];
best_inlier = 0;
for ii=1: n_iter
    
    idx = randperm(n_iter,4);
    
    xs = x(idx); % selected x
    ys = y(idx); % selected y
    
    mat_test = zeros(4,5);
    for jj=1:4
       mat_test(jj,:) = [xs(jj)^2 ys(jj)^2 xs(jj) ys(jj) 1]; 
    end
    
    [~,~,V] = svd(mat_test);
    param  = V(end,:);
    
    dist_all = zeros(1, n_data);
    for kk=1:n_data
        est_y_test = CompY(param, x(kk));
        dist_all(kk) = min(est_y_test - y(kk));
    end
    
    inlier_test = sum(abs(dist_all) < dist_thr);
    
    if best_inlier < inlier_test
       best_inlier = inlier_test;
       best_param = param; 
    end
end

function est_y = CompY(param, x)
a = param(1);
c = param(2);
d = param(3);
f = param(4);
e = param(5);

val_sqrt = sqrt(-a/c*x*x - d/c*x -f/c + e^2/4/c/c);
est_y = [val_sqrt -val_sqrt]-e/2/c;
end



% 
% 
% function param_best = cm_ransac_ellipse(x, y, dist_thr, max_n_trials)
% 
% 
% 
% 
% function param_best = cm_ransac_line(x_data, y_data, dist_thr, max_n_trials)
% 
% nData = numel(x_data);
% param_best = zeros(2,1);
% num_inliner_best = 0;
% for ii=1:max_n_trials
%     pt_idx = randperm(nData,2);
%     x_sub = x_data(pt_idx);
%     y_sub = y_data(pt_idx);
%     
%     % https://en.wikipedia.org/wiki/Line_(geometry)
%     mh = diff(y_sub)/diff(x_sub);
%     bh = det([y_sub x_sub])/diff(x_sub);
%     
%     dist_pt = abs(mh*x_data+bh-y_data);
%     
%     num_inlier = sum(dist_pt<dist_thr);
%     if num_inlier>num_inliner_best
%         param_best(1) = mh;
%         param_best(2) = bh;
%         num_inliner_best = num_inlier;
%     end
% end